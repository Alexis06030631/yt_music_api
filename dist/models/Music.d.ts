import { Download, Album, Artwork, Artist, Duration, Lyrics, NoLyrics, Music_model } from "./";
import { DownloadType_param } from "../types/DownloadType";
import { DownloadQuality_param } from "../types/DownloadQuality";
export default class Music {
    /**
     * An array of Artwork objects
     */
    artworks: Array<Artwork>;
    /**
     * The YTmusic id of the music
     */
    id: string;
    /**
     * The title of the music
     */
    title: string;
    /**
     * An array of Artist objects
     */
    artists: Array<Artist>;
    /**
     * The type of the video
     */
    typeVideo: string;
    /**
     * The duration of the music
     */
    duration: Duration;
    /**
     * The browseId of the music
     */
    browseId: string;
    /**
     * If the music is audio only
     */
    isAudioOnly: boolean;
    /**
     * If the music is generated by the autoMix
     */
    autoMix: boolean;
    /**
     * Return the album of the music if it's available
     */
    album?: Album;
    /**
     * The date of the music if it's available
     */
    date?: number;
    /**
     * If the music contains explicit content
     */
    isExplicit: boolean;
    constructor(data: Music_model, autoMix?: boolean);
    getLyrics(): Promise<Lyrics | NoLyrics>;
    download(type: DownloadType_param, quality?: DownloadQuality_param): Promise<Download>;
}
//# sourceMappingURL=Music.d.ts.map